// Bismillah

/*When I write code, my only request to Creator(Allah) is that he opens
my eyes of knowledge. And may he be with me... And make everything
easy for me..Amin...............*/
// الله أكبر
// 真主至大

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define endl '\n'
#define ll long long int
#define inf INT_MAX
#define pii pair<int, int>
#define negInf INT_MIN
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) ((a * b) / gcd(a, b))
#define __pow(a, b) exp(b *log(a))
// void hey_output()
// {
// #ifndef ONLINE_JUDGE
//     freopen("input.txt", "r", stdin);
//     freopen("output.txt", "w", stdout);
// #endif
// }

using namespace __gnu_pbds;
using namespace std;
template <typename T>
using pbds = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
const int N = 1e5 + 7;
void makeMeHappyReducePainGoAhedNeverGiveUPIWilBeSuccessInshaAllah()
{
    // 阿萨杜扎曼 阿拉明
    //  如果心中充满信念，无比坚定，就一定会看到胜利。
    ll n;
    cin >> n;
    vector<ll> arr1(n);
    vector<ll> arr2(n + 1);
    for (int i = 0; i < n; ++i)
        cin >> arr1[i];
    for (int i = 0; i < n + 1; ++i)
        cin >> arr2[i];

    // cout << task << endl;
    bool flag = false;
    ll op = 0;
    ll task = arr2[n];
    ll idx1 = inf;
    for (int i = 0; i < n; ++i)
        idx1 = min(idx1, abs(arr1[i] - task));

    for (int i = 0; i < n; ++i)
    {
        if (min(arr1[i], arr2[i]) <= task and max(arr1[i], arr2[i]) >= task)
            flag = true;

        if (arr1[i] > arr2[i])
        {
            op += abs(arr1[i] - arr2[i]);
            arr1[i] -= abs(arr1[i] - arr2[i]);
        }
        else
        {
            op += abs(arr1[i] - arr2[i]);
            arr1[i] += abs(arr1[i] - arr2[i]);
        }
        // op += abs(arr1[i] - arr2[i]);
    }
    // for(auto u : arr1)cout<< u << " ";
    // cout << endl;
    if (flag)
    {
        op += 1;
        cout << op << endl;
        return;
    }
    ll idx = inf;
    for (int i = 0; i < n; ++i)
        idx = min(idx, abs(arr1[i] - task));

    idx = min(idx, idx1);
    op += idx;
    op += 1;
    cout << op << endl;
}

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    // hey_output();

    int t = 1;
    cin >> t;
    while (t--)
    {
        makeMeHappyReducePainGoAhedNeverGiveUPIWilBeSuccessInshaAllah();
    }

    return 0;
}
// Alhamdulillah
