// Bismillah

/*When I write code, my only request to Creator(Allah) is that he opens
my eyes of knowledge. And may he be with me... And make everything
easy for me..Amin...............*/
// الله أكبر
// 真主至大

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define endl '\n'
#define ll long long int
#define inf INT_MAX
#define pii pair<int, int>
#define negInf INT_MIN
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) ((a * b) / gcd(a, b))
#define __pow(a, b) exp(b *log(a))
// void hey_output()
// {
// #ifndef ONLINE_JUDGE
//     freopen("input.txt", "r", stdin);
//     freopen("output.txt", "w", stdout);
// #endif
// }

using namespace __gnu_pbds;
using namespace std;
template <typename T>
using pbds = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
const int N = 1e5 + 7;
void makeMeHappyReducePainGoAhedNeverGiveUPIWilBeSuccessInshaAllah()
{
    // 阿萨杜扎曼 阿拉明
    //  如果心中充满信念，无比坚定，就一定会看到胜利。
    ll n;
    cin >> n;

    vector<ll> y(n);
    for (int i = 0; i < n; ++i)
    {
        cin >> y[i];
    }
    sort(y.begin(), y.end());
    // for(auto u : y)cout << u << " ";
    ll task1 = -1, task2 = -1;
    ll dis = inf;
    for (int i = 0; i < n - 1; ++i)
    {
        if (abs(y[i] - y[i + 1]) < dis)
        {
            task1 = i, task2 = i + 1;
            dis = abs(y[i] - y[i + 1]);
        }
    }
    // cout << y[task1] << " " << y[task2] << endl;
    vector<ll> ans(n, 0);
    ans[0] = y[task1];
    ans[n - 1] = y[task2];
    // for(auto u : ans)cout << u << " ";
    vector<ll> res;
    for (int i = 0; i < task1; ++i)
        res.push_back(y[i]);
    // for (auto u : res)
    //     cout << u << " ";
    reverse(res.begin(), res.end());
    ll r = n - 2;
    for (int i = 0; i < res.size(); ++i)
    {
        ans[r] = res[i];
        --r;
    }
    // for(auto u : ans)cout << u << " ";
    res.clear();
    // for(auto u : res)cout << u << " ";
    for (int i = task2 + 1; i < n; ++i)
    {
        res.push_back(y[i]);
    }
    // for(auto u : res)cout << u << " ";
    r = 1;
    for (int i = 0; i < res.size(); ++i)
    {
        ans[r] = res[i];
        ++r;
    }
    for (auto &u : ans)
        cout << u << " ";
    cout << endl;
}

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    // hey_output();

    int t = 1;
    cin >> t;
    while (t--)
    {
        makeMeHappyReducePainGoAhedNeverGiveUPIWilBeSuccessInshaAllah();
    }

    return 0;
}
// Alhamdulillah
