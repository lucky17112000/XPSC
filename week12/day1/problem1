// Bismillah

/*When I write code, my only request to Creator(Allah) is that he opens
my eyes of knowledge. And may he be with me... And make everything
easy for me..Amin...............*/
// الله أكبر
// 真主至大

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define endl '\n'
#define ll long long int
#define inf INT_MAX
#define pii pair<int, int>
#define negInf INT_MIN
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) ((a * b) / gcd(a, b))
#define __pow(a, b) exp(b *log(a))
// void hey_output()
// {
// #ifndef ONLINE_JUDGE
//     freopen("input.txt", "r", stdin);
//     freopen("output.txt", "w", stdout);
// #endif
// }

using namespace __gnu_pbds;
using namespace std;
template <typename T>
using pbds = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
const int N = 1e5 + 7;
void makeMeHappyReducePainGoAhedNeverGiveUPIWilBeSuccessInshaAllah()
{
    // 阿萨杜扎曼 阿拉明
    //  如果心中充满信念，无比坚定，就一定会看到胜利。
    ll n;
    cin >> n;
    vector<vector<ll>> v;
    while (n--)
    {
        vector<ll> x;
        ll y;
        cin >> y;
        for (int i = 0; i < y; ++i)
        {
            ll val;
            cin >> val;
            x.push_back(val);
        }
        v.push_back(x);
    }
    set<ll> st;

    for (int i = 0; i < v.size(); ++i)
    {
        for (int j = 0; j < v[i].size(); ++j)
            st.insert(v[i][j]);
    }
    vector<ll> res;
    for (auto u : st)
        res.push_back(u);
    ll ans = negInf;
    for (int i = 0; i < res.size(); ++i)
    {
        ll task = res[i];

        set<ll> r;

        for (int i = 0; i < v.size(); ++i)
        {
            bool isExist;

            for (int j = 0; j < v[i].size(); ++j)
            {
                isExist = false;
                if (v[i][j] == task)
                {
                    isExist = true;
                    break;
                }
            }
            if (!isExist)
            {
                for (int l = 0; l < v[i].size(); ++l)
                    r.insert(v[i][l]);
            }
        }
        ans = max(ans, (ll)r.size());
    }
    cout << ans << endl;
}

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    // hey_output();

    int t = 1;
    cin >> t;
    while (t--)
    {
        makeMeHappyReducePainGoAhedNeverGiveUPIWilBeSuccessInshaAllah();
    }

    return 0;
}
// Alhamdulillah
