// Bismillah

/*When I write code, my only request to Creator(Allah) is that he opens
my eyes of knowledge. And may he be with me... And make everything
easy for me..Amin...............*/
// الله أكبر
// 真主至大

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define endl '\n'
#define ll long long int
#define inf INT_MAX
#define pii pair<int, int>
#define negInf INT_MIN
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) ((a * b) / gcd(a, b))
#define __pow(a, b) exp(b *log(a))
// void hey_output()
// {
// #ifndef ONLINE_JUDGE
//     freopen("input.txt", "r", stdin);
//     freopen("output.txt", "w", stdout);
// #endif
// }

using namespace __gnu_pbds;
using namespace std;
template <typename T>
using pbds = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
const int N = 1e5 + 7;
auto chk = [&](vector<ll> &x, ll n, ll task2)
{
    ll low = 0, high = n - 1;
    ll idx = -1;
    while (low <= high)
    {
        ll mid = (low + high) / 2;
        if (x[mid] >= task2)
        {
            idx = mid;
            high = mid - 1;
        }
        else
            low = mid + 1;
    }
    return idx;
};
void makeMeHappyReducePainGoAhedNeverGiveUPIWilBeSuccessInshaAllah()
{
    // 阿萨杜扎曼 阿拉明
    //  如果心中充满信念，无比坚定，就一定会看到胜利。
    ll n, m;
    cin >> n >> m;
    vector<ll> x(n);
    for (int i = 0; i < n; ++i)
        cin >> x[i];
    sort(x.begin(), x.end());
    if (m >= 3)
    {
        cout << 0 << endl;
        return;
    }
    else if (m == 1)
    {
        ll ans = x[0];
        for (int i = 0; i < n - 1; ++i)
        {
            ans = min(ans, abs(x[i] - x[i + 1]));
        }
        cout << ans << endl;
        return;
    }
    ll task = x[0];
    for (int i = 0; i < n - 1; ++i)
    {
        for (int j = i + 1; j < n; ++j)
        {
            ll task2 = abs(x[i] - x[j]);
            task = min(task2, task);

            if (chk(x, n, task2) != 0)
            {

                task = min(task, abs(x[chk(x, n, task2)] - task2));
                task = min(task, abs(x[chk(x, n, task2) - 1] - task2));
            }
            else if (chk(x, n, task2) == 0)
            {
                task = min(task, abs(x[0] - task2));
            }
        }
    }
    cout << task << endl;
}

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    // hey_output();

    int t = 1;
    cin >> t;
    while (t--)
    {
        makeMeHappyReducePainGoAhedNeverGiveUPIWilBeSuccessInshaAllah();
    }

    return 0;
}
// Alhamdulillah
